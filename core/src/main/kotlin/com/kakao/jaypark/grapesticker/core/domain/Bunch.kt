package com.kakao.jaypark.grapesticker.core.domain

import com.amazonaws.services.dynamodbv2.datamodeling.*
import com.kakao.jaypark.grapesticker.core.domain.converter.LocalDateTimeConverter
import com.kakao.jaypark.grapesticker.core.domain.generator.CreatedDateGenerator
import java.time.LocalDateTime

@DynamoDBTable(tableName = "bunch")
data class Bunch(
        @DynamoDBHashKey(attributeName = "id")
        @DynamoDBAutoGeneratedKey
        var id: String? = null,
        @DynamoDBAttribute
        var name: String? = null,
        @DynamoDBAttribute
        var maxNumberOfGrapes: Int = 10,
        @DynamoDBAttribute
        var grapes: HashSet<Grape>? = null,
        @DynamoDBAttribute
        @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.S)
        var stickerType: GrapeStickerType = GrapeStickerType.PRAISE,
        @DynamoDBAttribute
        @DynamoDBTypeConverted(converter = LocalDateTimeConverter::class)
        @DynamoDBAutoGenerated(generator = CreatedDateGenerator::class)
        var createdDate: LocalDateTime? = null
) {
    fun attachGrape(grape: Grape) {
        if (grapes == null) {
            grapes = hashSetOf(grape)
        } else {
            val duplicatePosition = grapes?.any {
                    it.position == grape.position
            }
            if (duplicatePosition!!) {
                throw RuntimeException("grape position duplicated")
            }
            grapes?.add(grape)
        }
    }
}